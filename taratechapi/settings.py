"""
Django settings for taratechapi project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f-x#=1o_t6w)rvbvcm01(3g%dwojnfoo3(@*u_+az5-7l&t3*9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['taratechid.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'nocan'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'taratechapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'taratechapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Supabase Configuration
# These can be overridden by environment variables
SUPABASE_URL = 'https://your-project.supabase.co'
SUPABASE_ANON_KEY = 'your-anon-key-here'

# URL Configuration
# Centralized URL settings - update these for different environments
BASE_URL = 'https://taratechid.pythonanywhere.com'  # PythonAnywhere Production
# BASE_URL = 'http://localhost:8000'  # Development
# BASE_URL = 'https://staging.your-domain.com'  # Staging

# API URL Configuration
API_BASE_URL = f'{BASE_URL}/api'
PAYMENT_API_BASE_URL = f'{API_BASE_URL}/payment'

# Specific API endpoints (these will be automatically generated from BASE_URL)
API_ENDPOINTS = {
    'test_connection': f'{API_BASE_URL}/supabase/test-connection/',
    'get_data': f'{API_BASE_URL}/supabase/get-data/',
    'insert_data': f'{API_BASE_URL}/supabase/insert-data/',
    'update_data': f'{API_BASE_URL}/supabase/update-data/',
    'delete_data': f'{API_BASE_URL}/supabase/delete-data/',
    'execute_query': f'{API_BASE_URL}/supabase/execute-query/',
    'table_info': f'{API_BASE_URL}/supabase/table-info/',
    'auth_login': f'{API_BASE_URL}/supabase/auth/login/',
    'auth_register': f'{API_BASE_URL}/supabase/auth/register/',
    'payment_create': f'{PAYMENT_API_BASE_URL}/create/',
    'payment_status': f'{PAYMENT_API_BASE_URL}/{{payment_id}}/status/',
    'payment_simulate': f'{PAYMENT_API_BASE_URL}/{{payment_id}}/simulate/',
}

# Environment-specific settings
ENVIRONMENT = 'production'  # 'development', 'staging', 'production'

# Environment-specific configurations
if ENVIRONMENT == 'production':
    DEBUG = False
    ALLOWED_HOSTS = ['taratechid.pythonanywhere.com', 'www.taratechid.pythonanywhere.com']
    # Add production-specific settings here
elif ENVIRONMENT == 'staging':
    DEBUG = True
    ALLOWED_HOSTS = ['staging.your-domain.com']
    # Add staging-specific settings here
else:  # development
    DEBUG = True
    ALLOWED_HOSTS = ['localhost', '127.0.0.1', '0.0.0.0']

# Override DEBUG for PythonAnywhere to help with debugging
DEBUG = True  # Set to True temporarily to see error details

# Ensure ALLOWED_HOSTS includes the PythonAnywhere domain
ALLOWED_HOSTS = ['taratechid.pythonanywhere.com', 'www.taratechid.pythonanywhere.com', 'localhost', '127.0.0.1']

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'django.log',
            'formatter': 'verbose',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'nocan': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}
